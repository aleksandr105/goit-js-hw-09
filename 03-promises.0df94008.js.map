{"version":3,"sources":["js/03-promises.js"],"names":["formEl","document","querySelector","onRanderPromis","e","preventDefault","delay","Number","target","value","step","amount","position","intervalId","setInterval","clearInterval","setTimeout","createPromise","then","console","log","catch","Promise","resolve","reject","Math","random","addEventListener"],"mappings":";AAAA,MAAMA,EAASC,SAASC,cAAc,SAItC,SAASC,EAAeC,GACtBA,EAAEC,iBACEC,IAAAA,EAAQC,OAAOH,EAAEI,OAAOF,MAAMG,OAC9BC,EAAOH,OAAOH,EAAEI,OAAOE,KAAKD,OAC5BE,EAASJ,OAAOH,EAAEI,OAAOG,OAAOF,OAChCG,EAAW,EACfC,WAAaC,YAAY,KACnBF,GAAYD,EACdI,cAAcF,aAGhBD,GAAY,EAEZI,WAAW,KACTV,GAASI,GACR,GAEHO,EAAcL,EAAUN,GACrBY,KAAK,EAAGN,SAAAA,EAAUN,MAAAA,MACjBa,QAAQC,2BAA2BR,QAAeN,SAEnDe,MAAM,EAAGT,SAAAA,EAAUN,MAAAA,MAClBa,QAAQC,0BAA0BR,QAAeN,WAEpDI,GAGL,SAASO,EAAcL,EAAUN,GACxB,OAAA,IAAIgB,QAAQ,CAACC,EAASC,KAC3BR,WAAW,KACaS,KAAKC,SAAW,GAEpCH,EAAQ,CAAEX,SAAAA,EAAUN,MAAAA,IAEpBkB,EAAO,CAAEZ,SAAAA,EAAUN,MAAAA,KAEpBA,KAtCPN,EAAO2B,iBAAiB,SAAUxB","file":"03-promises.0df94008.js","sourceRoot":"../src","sourcesContent":["const formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onRanderPromis);\n\nfunction onRanderPromis(e) {\n  e.preventDefault();\n  let delay = Number(e.target.delay.value);\n  let step = Number(e.target.step.value);\n  let amount = Number(e.target.amount.value);\n  let position = 0;\n  intervalId = setInterval(() => {\n    if (position >= amount) {\n      clearInterval(intervalId);\n      return;\n    }\n    position += 1;\n\n    setTimeout(() => {\n      delay += step;\n    }, 0);\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }, step);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"]}